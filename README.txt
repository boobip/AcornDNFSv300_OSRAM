Introduction
============

This repository contains the original source code for the Acorn DNFS
version 3.00, which includes DFS 1.20, NFS 3.60 and TUBE HOST 1.10

The structure of the repository is as follows:

    original_sources.zip
              - a copy of the original DNFS source files, with the
                original <cr> line endings.

    adfs/     - disk images in ADFS (adl and dat) formats;
                these are generated by the make_disk_images.sh script
                which uses COEUS's AcornFsUtils package.

    src/      - the DNFS source files

    tools/    - binaries for MASM (both DFS and non-DFS versions)

For documentation on DNFS, see:
http://chrisacorns.computinghistory.org.uk/docs/Acorn/Tech/Acorn_TheDNFS-ib.pdf

Assembling the DNFS Source Code
===============================

An Acorn Turbo (256K) 6502 Co Processor is needed to assemble the DNFS
sources. As originals are exceedingly rare, an alternative is the
emulated version provided by PiTubeDirect Fer-De-Lance (and later) as
Co Pro 17. The reset banner should say: "Acorn TUBE 6502 256K".

The source code is in Acorn MASM format, and a copy of the "Turbo"
version of MASM (called TurMASM) is included in the disk images.

Using ADFS:
===========

The disk organization on ADFS involves a single disk image containing
the tools (TurMASM), build scripts, source code, and sufficient free
space for the build process.

In the adfs/ directory are the following versions:

   AcornDNFSv300.adl - this is a 640KB interleaved disk image,
   suitable for writing to a floppy disk.

   AcornDNFSv300.dat - this is a 640KB non-interleaved disk image,
   suitable for using with BeebSCSI (e.g. rename it to scsi0.dat).

Transfer one of these disk images onto your physical hardware.

To assemble the sources, you just need to boot the disk (it contains
an appropriate !BOOT file)

The DNFS binary is generated in a file called ROM in the root directory
    (this has a MD5SUM of 2975f2c280c1895c7dc9203aca5114cc)

Notes:
======

The MD5SUM of the released version of DNFS 3.00 is:
    5daed103918277e2065dd7e8d23e57a5

Doing a binary comparison, there are two bytes different:

< 00bfd0 65 f2 aa a5 f3 69 00 a8 68 60 54 20 f8 18 a5 a8
---
> 00bfd0 65 f2 aa a5 f3 69 00 a8 68 60 00 00 f8 18 a5 a8
                                       ^^ ^^

These bytes are basically padding, between DOS11 and DOS12:

Looking at the start of DOS12:

;  *** File Twelve *** > DOS12
 TTL - DOS12 -  Pseudo-MOS PNUM kept at $XFF0
 OPT &01

 [ . > &BFDC
 ! 1, "Help, Help!"
 ]
 [ . < &BFDC
 % &BFDC - .
 ]

 ; ORG &BFDC

The MASM build makes sure these padding bytes are set to zero. This
does not seem to have been done when DNFS was released.

(The MASM sources date from Dec 7 1988; DNFS 3.00 was originally
released in 1984.)

Acknowledgements:
=================

Many thanks to Stuart Swales and Paul Fellows (ex Acornsoft) for
discovering these long-lost sources and making them available to the
Acorn community.
