 ; > NFS13
Q * RTUBE +&80
QTUBE * RTUBE+&100
ORG53 * ORG52 +LEN52
 ORG QTUBE
S53 * .
TASKS & RDCHZ
 & CLI
 & SBYTE
 & BYTE
 & WORD
 & RDLN
 & ARGS
 & BGET
 & BPUT
 & FIND
 & FILE
 & GBPB
VSTATE = &86
 = &88
 = &96
 = &98
 = &18
 = &18
 = &82
 = &18
BPUT JSR NEWRC
 TAY
 JSR NEWRC
 JSR OSBPUT
 JMP QRPLY
BGET JSR NEWRC
 TAY
 JSR OSBGET
 JMP RDCHY
RDCHZ JSR OSRDCH
RDCHY RORA ;send C and A and go back to MAIN
 JSR RDCHA
 ROLA
 JMP RPLY
FIND JSR NEWRC
 BEQ FINDA
 PHA
 JSR STRNG
 PLA
 JSR OSFIND
 JMP RPLY
FINDA JSR NEWRC
 TAY
 LDAIM &00
 JSR OSFIND
 JMP QRPLY
ARGS JSR NEWRC
 TAY
 LDXIM &04
ARGSW JSR NEWRC
 STAZX &FF ;ZRAM-%1
 DEX
 BNE ARGSW
 JSR NEWRC
 JSR OSARGX
 JSR RDCHA
 LDXIM &03
ARGSS LDAAX ZRAM
 JSR RDCHA
 DEX
 BPL ARGSS
 JMP MAIN
STRNG LDXIM SRAM
 LDYIM &00
STRNH JSR NEWRC
 STAAY SRAM
 INY
 BEQ STRNJ
 CMPIM &0D
 BNE STRNH
STRNJ LDYIM /(SRAM )
 RTS
CLI JSR STRNG
 JSR OSCLI
QRPLY LDAIM &7F
RPLY BIT R2STAT
 BVC RPLY
 STA R2DATA
MJ JMP MAIN
FILE LDXIM &10
FILEA JSR NEWRC
 STAAX ZRAM +&01
 DEX
 BNE FILEA
 JSR STRNG
 STX ZRAM
 STY ZRAM +&01
 LDYIM /(ZRAM )
 JSR NEWRC
 JSR OSFILE
 JSR RDCHA
 LDXIM &10
FILEB LDAAX ZRAM +&01
 JSR RDCHA
 DEX
 BNE FILEB
 BEQ MJ
GBPB LDXIM &0D
GBPBA JSR NEWRC
 STAZX &FF ;ZRAM-%1
 DEX
 BNE GBPBA
 JSR NEWRC
 LDYIM &00
 JSR OSGBPB
 PHA
 LDXIM &0C
GBPBB LDAAX ZRAM
 JSR RDCHA
 DEX
 BPL GBPBB
 PLA
 JMP RDCHY
SBYTE JSR NEWRC
 TAX
 JSR NEWRC
 JSR OSBYTE
SBYTC BIT R2STAT
 BVC SBYTC
 STX R2DATA
BYTEX JMP MAIN
BYTE JSR NEWRC
 TAX
 JSR NEWRC
 TAY
 JSR NEWRC
 JSR OSBYTE
 EORIM &9D
 BEQ BYTEX
 RORA
 JSR RDCHA
BYTEC BIT R2STAT
 BVC BYTEC
 STY R2DATA
 BVS SBYTC
WORD JSR NEWRC
 TAY ;*****
WORDA BIT R2STAT
 BPL WORDA
 LDX R2DATA
 DEX
 BMI WORDC
WORDB BIT R2STAT
 BPL WORDB
 LDA R2DATA ;*****
 STAAX WRAM ;*****
 DEX
 BPL WORDB
 TYA ;*****
WORDC LDXIM WRAM ;*****
 LDYIM /(WRAM ) ;*****
 JSR OSWORD
WORDD BIT R2STAT
 BPL WORDD
 LDX R2DATA
 DEX
 BMI WOREN
WORDE LDYAX WRAM
WORDF BIT R2STAT
 BVC WORDF
 STY R2DATA
 DEX
 BPL WORDE
WOREN JMP MAIN
RDLN LDXIM &04
RDLNA JSR NEWRC
 STAAX ZRAM
 DEX
 BPL RDLNA
 INX
 LDYIM /(ZRAM )
 TXA
 JSR OSWORD
 BCC RDLNC
 LDAIM &FF
 JMP RPLY
RDLNC LDXIM &00
 LDAIM &7F
 JSR RDCHA
RDLND LDAAX SRAM
RDLNE JSR RDCHA
 INX
 CMPIM &0D
 BNE RDLND
 JMP MAIN
RDCHA BIT R2STAT
 BVC RDCHA
 STA R2DATA
 RTS
WRIFOR BIT R4STAT
 BVC WRIFOR
 STA R4DATA
 RTS
ESCAPE LDA ESCFLG
 SEC
 RORA
 BMI ESCA
EVENT PHA
 LDAIM &00
 JSR ESCA
 TYA
 JSR ESCA
 TXA
 JSR ESCA
 PLA
ESCA BIT R1STAT
 BVC ESCA
 STA R1DATA
 RTS
NEWRC BIT R2STAT
 BPL NEWRC
 LDA R2DATA
 RTS

E53 * .
 = "Jes"
LEN53 * E53 - S53
ORG54 * ORG53 +LEN53
THEEND * ORG54 -ORG

 = &FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF
 = &FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF
 = &FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF
 = &FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF
 = &FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF
 = &FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF,&FF
 ;unused bytes set to $FF, (thanks Paul)

 END
